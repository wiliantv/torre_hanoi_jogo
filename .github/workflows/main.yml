name: Flutter Build and Release

on:
  push:
    branches:
      - master

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Get version from pubspec.yaml
        id: get_version
        run: echo ::set-output name=version::$(grep -o 'version:.*' pubspec.yaml | sed 's/version: *//')

      - name: Build for Android
        run: |
          flutter pub get
          flutter test
          flutter build apk
          flutter build appbundle
        # Publish Android artifacts
        - name: Upload Android artifacts
          uses: actions/upload-artifact@v2
          with:
            name: android-artifacts
            path: build/app/outputs/flutter-apk
          
      - name: Build for iOS
        if: runner.os == 'macOS'
        run: |
          flutter pub get
          flutter test
          flutter build ios --release --no-codesign
        # Publish iOS artifacts
        - name: Upload iOS artifacts
          uses: actions/upload-artifact@v2
          with:
            name: ios-artifacts
            path: build/ios/iphoneos
        
      - name: Build for Web
        run: |
          flutter pub get
          flutter test
          flutter build web
        # Publish Web artifacts
        - name: Upload Web artifacts
          uses: actions/upload-artifact@v2
          with:
            name: web-artifacts
            path: build/web

      - name: Build for Windows
        if: runner.os == 'Windows'
        run: flutter build windows
        # Publish Windows artifacts
        - name: Upload Windows artifacts
          uses: actions/upload-artifact@v2
          with:
            name: windows-artifacts
            path: build\windows\runner\Release

      - name: Build for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          flutter build linux
        # Publish Linux artifacts
        - name: Upload Linux artifacts
          uses: actions/upload-artifact@v2
          with:
            name: linux-artifacts
            path: build/linux/x64
        
      - name: Build for macOS
        if: runner.os == 'macOS'
        run: flutter build macos
        # Publish macOS artifacts
        - name: Upload macOS artifacts
          uses: actions/upload-artifact@v2
          with:
            name: macos-artifacts
            path: build/macos
        
      - name: Create tag and release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/**
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
